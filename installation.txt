Installation of PyCUDA and Python packages (can be on any Mesabi node):
- module load python2
- conda create -n installs python=3 numpy
- source activate installs
- module load cuda/9.0
- pip install pycuda
- conda install -c conda-forge gdal
- conda install -c conda-forge rasterio
- conda install -c anaconda pandas
- conda install -c conda-forge fiona
- conda install -c anaconda scipy
- conda install -c anaconda coverage
- conda install -c conda-forge matplotlib
- conda install -c anaconda pillow

Usage (must be on a k40 node):
- module load python2
- source activate installs
- module load cuda/9.0

Writing a kernel function from scratch
- Define PyCUDA imports
- Define kernel function
	- Declared as a python multiline string
	- Written in C++
- Compile kernel code and get kernel functions using mod.get_function

Incorporate kernel function with inputs to run a model
- Define a primitive in PrimitivesRaster.py
	- vars() accepts inputs to function
	- __call__() defines functionality of primitive
- Execute primitive inside run_primitive()
	- Example: user_primitive.vars(var1, var2, ...)
	- ==, <=, >=, etc. are used to run multiple primitives
